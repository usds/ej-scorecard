name: Deploy Production

on:
  push:
    branches: [main]

env:
  PR_NUMBER: ${{ github.event.number }}
  AWS_APP_BUCKET_NAME: ej-scorecard
  AWS_DATA_BUCKET_NAME: ej-scorecard-private
  AWS_REGION: us-east-2
  AWS_APP_CDN_ID: EV4UY6HP6S3CE

jobs:
  run-ci:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    name: Lint, test, build and deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get data from S3
        run: aws s3 sync s3://$AWS_DATA_BUCKET_NAME/scorecards ./src/data/scorecards/

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: 7

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Check types
        run: pnpm type-check

      - name: Check linting
        run: pnpm lint

      - name: Run tests
        run: pnpm test

      - name: Check commits messages
        uses: wagoid/commitlint-github-action@v5

      - name: Set DESTINATION_FOLDER for branch
        run: |
          echo "DESTINATION_FOLDER=main" >> $GITHUB_ENV

      - name: Build project
        run: pnpm build
        env:
          SITE_URL: '${{ secrets.STAGE_SITE_URL }}'

      - name: Write AWS_REGION to env context
        run: |
          echo "AWS_REGION=$(echo $AWS_REGION)" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to AWS
        run: aws s3 sync ./public/ s3://$AWS_APP_BUCKET_NAME/${{env.DESTINATION_FOLDER}} --acl public-read --delete

      - name: Write AWS_APP_BUCKET_NAME to env context
        run: |
          echo "AWS_APP_BUCKET_NAME=$(echo $AWS_APP_BUCKET_NAME)" >> $GITHUB_ENV

      - name: Invalidate cache on AWS CDNs
        uses: chetan/invalidate-cloudfront-action@master
        env:
          DISTRIBUTION: ${{env.AWS_APP_CDN_ID}}
          PATHS: '/*'
          AWS_REGION: ${{ env.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Update PR with production URL
        uses: mshick/add-pr-comment@v1
        with:
          # Deploy to S3 for the production URL
          message: |
            **ðŸš¢  Here is the frontend production link: ðŸš¢**   
            Find it here:https://df8u87au4pzn3.cloudfront.net !
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: 'github-actions[bot]' # The user.login for temporary GitHub tokens
          allow-repeats: false # This is the default
